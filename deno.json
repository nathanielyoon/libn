{
  "license": "GPL-3.0-or-later",
  "workspace": [
    "./aead",
    "./base",
    "./csv",
    "./ecc",
    "./fp",
    "./hash",
    "./json",
    "./lib",
    "./query",
    "./signal",
    "./text"
  ],
  "imports": {
    "@std/assert": "jsr:@std/assert@^1.0.15",
    "@std/expect": "jsr:@std/expect@^1.0.17",
    "@std/testing": "jsr:@std/testing@^1.0.16",
    "fast-check": "npm:fast-check@^4.3.0"
  },
  "compilerOptions": {
    "exactOptionalPropertyTypes": true,
    "verbatimModuleSyntax": true
  },
  "lint": {
    "rules": {
      "include": [
        "camelcase",
        "eqeqeq",
        "no-console",
        "no-external-import",
        "no-inferrable-types",
        "no-self-compare",
        "no-sparse-arrays",
        "no-useless-rename",
        "prefer-ascii"
      ],
      "exclude": [
        "ban-types",
        "no-cond-assign",
        "no-control-regex",
        "no-explicit-any",
        "no-invalid-regexp"
      ],
      "tags": ["recommended", "workspace", "jsr"]
    }
  },
  "tasks": {
    "bundle": {
      "description": "Bundle files (with flags and file names passed to `deno task`).",
      "command": "deno run --allow-env --allow-run npm:esbuild --bundle --format=esm --external:@libn"
    },
    "write": {
      "description": "Runs a test-vector-writing script (with file name and arguments passed to `deno task`).",
      "command": "deno run --allow-net=\"www.rfc-editor.org,raw.githubusercontent.com,en.wikipedia.org,earthquake.usgs.gov,www.unicode.org,crockford.com,www.ietf.org\" --allow-write"
    },
    "vectors": {
      "description": "Runs all test-vector-writing scripts.",
      "command": "cd aead && rm -f ./vectors.json && deno task --cwd=. write ./test.ts && cd ..; cd base && rm -f ./vectors.json && deno task --cwd=. write ./test.ts && cd ..; cd csv && rm -f ./vectors.json && deno task --cwd=. write ./test.ts && cd ..; cd ecc && rm -f ./vectors.json && deno task --cwd=. write ./test.ts && cd ..; cd hash && rm -f ./vectors.json && deno task --cwd=. write ./test.ts && cd ..; cd text && rm -f ./vectors.json && deno task --cwd=. write ./test.ts && cd ..;"
    },
    "check": "cd \"$INIT_CWD\" && deno check --doc",
    "lint": "cd \"$INIT_CWD\" && deno lint --compact && deno doc --lint **/*.ts",
    "test": "cd \"$INIT_CWD\" && deno test --doc --allow-net=\"unicode.org\" --allow-read=\"unicode.txt\" --no-check --parallel --clean --coverage=/tmp/deno-coverage --coverage-raw-data-only",
    "cover": {
      "dependencies": ["test"],
      "command": "cd \"$INIT_CWD\" && deno coverage --detailed /tmp/deno-coverage --include=\"^file://$(pwd)\""
    },
    "pure": {
      "description": "Checks whether the current directory's module has side-effects, which would be included in the generated output.",
      "command": "cd \"$INIT_CWD\" && echo \"import \\\"./mod.ts\\\";\" >bundle.ts && deno task --cwd=. bundle ./bundle.ts; rm -f ./bundle.ts;"
    },
    "all": {
      "dependencies": ["check", "lint", "test", "cover"],
      "command": "cd \"$INIT_CWD\" && deno task --cwd=. pure && deno publish --dry-run --allow-dirty"
    }
  }
}
